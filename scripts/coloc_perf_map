#!/bin/bash
# Colocated functions n
# run in profiling directory
TIMEFORMAT=%R
eval "$(conda shell.bash hook)"
conda activate my_tf
# batch_max=32
# mem=$((16384/8))

declare -A my_dict=(
    ['ctr_dnn_torch']="1 2 4 8 12"
    ['particle_filter']="1 2 4 8 16 32"
    ['resnet50_pytorch']="1 2 4 8"
    ['resnet50_tf']="1 2 4 8"
    ['vec_add']="1 2 4 8 16 32 48"
    ['vgg16_pytorch']="1 2 3 4"
)


direc='/home/ub-11/mitali/workload_executables/*'
for file in $direc
do
    filename=$(basename "$file")
    echo "TotalNumProc, Time" > /home/ub-11/mitali/profiling/coloc_homo/${filename%.*}.csv
    
    # if [[ "$filename" == "vec_add" ]];
    # then
    declare -a num_coloc=(${my_dict[$filename]})
    for i in "${num_coloc[@]}"
    do
        # cores=$((100/$i))
        source ~/mitali/scripts/setup_gpu_limit.sh 100%
        # echo $CUDA_MPS_ACTIVE_THREAD_PERCENTAGE
        echo "evaluating for workload = ${filename} and ${i} processes"

        cmd="${file} &"
        final_cmd=''
        for((c=1;c<=$i;c++))
        do
            final_cmd="$final_cmd $cmd"
        done
        start=$(date +%s.%3N)
        eval $final_cmd
        wait
        end=$(date +%s.%3N)
        runtime=$(echo "$end - $start" | bc)
        line="${i},${runtime}"
        echo -e $line >> /home/ub-11/mitali/profiling/coloc_homo/${filename}.csv
        wait
    done
    #     exit
    # fi
done